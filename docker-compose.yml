version: '3'
services:
  pg:
    image: postgis/postgis:16-3.4
    restart: always
    container_name: pg
    ports:
      - 6500:5432
    env_file:
      - ./.env
    volumes:
      - type: volume
        source: data-volume
        target: /var/lib/postgresql/data

  adminer:
    image: adminer
    restart: always
    ports:
      - 6501:8080

  motis-import:
    image: ghcr.io/motis-project/motis:2
    volumes:
      - ./GTFS.zip:/input/GTFS.zip
      - ./osm.pbf:/input/osm.pbf
      - ./config.yml:/config.yml
      - motis-data:/data:rw
    command: /bin/sh -c "./motis import"

  motis-server:
    image: ghcr.io/motis-project/motis:2
    depends_on:
      - motis-import
    volumes:
      - motis-data:/data:rw
    ports:
      - 6499:8080
    command: /bin/sh -c "cd / && /motis server"

  prima:
    image: prima
    restart: always
    ports:
      - 7777:3000
    environment:
      - DATABASE_URL=postgresql://postgres:pw@pg/prima
      - ORIGIN=http://localhost:7777
    extra_hosts:
      - 'host.docker.internal:host-gateway'
    build:
      context: .

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    restart: always
    volumes:
      - './monitoring/:/etc/prometheus/'
      - prometheus-data:/prometheus
    ports:
      - 13090:9090
    command: '--config.file=/etc/prometheus/prometheus.yml --storage.tsdb.path=/prometheus --storage.tsdb.retention.time=1y --storage.tsdb.retention.size=10GB --web.console.libraries=/usr/share/prometheus/console_libraries --web.console.templates=/usr/share/prometheus/consoles'
  blackbox-exporter:
    image: quay.io/prometheus/blackbox-exporter
    container_name: blackbox-exporter
    restart: always
    volumes:
      - './monitoring/blackbox.yml:/etc/prometheus/blackbox.yml'
    command: '--config.file=/etc/prometheus/blackbox.yml'
  alertmanager:
    image: prom/alertmanager
    container_name: alertmanager
    restart: always
    volumes:
      - './monitoring/alertmanager.yml:/etc/prometheus/alertmanager.yml'
    command: '--config.file=/etc/prometheus/alertmanager.yml'
  node-exporter:
    image: quay.io/prometheus/node-exporter:latest
    container_name: node-exporter
    command: '--path.rootfs=/host --collector.disable-defaults --collector.cpu --collector.diskstats --collector.filesystem --collector.loadavg --collector.meminfo --collector.netdev'
    pid: host
    restart: always
    volumes:
      - '/:/host:ro,rslave'
  sql-exporter:
    image: burningalchemist/sql_exporter
    container_name: sql-exporter
    command: '--config.file=/etc/prometheus/sql.yml'
    volumes:
      - './monitoring/sql/:/etc/prometheus/'
    pid: host
    restart: always
  grafana:
    image: grafana/grafana-oss
    container_name: grafana
    restart: always
    volumes:
      - './monitoring/grafana/:/var/lib/grafana/'
    ports:
      - 13000:3000

  cron:
    build:
      context: .
      dockerfile: cron/Dockerfile
    env_file:
      - .env
    depends_on:
      - pg
    restart: always
    container_name: cron
    volumes:
      - ./cron/scripts:/app/scripts
      - ./cron/crontab:/etc/cron.d/cron-jobs:rw
      - ./db_backups:/app/db_backups

volumes:
  data-volume:
  motis-data:
  prometheus-data:
