//! `SeaORM` Entity. Generated by sea-orm-codegen 0.12.14

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "vehicle")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub id: i32,
    #[sea_orm(unique)]
    pub license_plate: String,
    pub company: i32,
    pub seats: i32,
    pub wheelchair_capacity: i32,
    pub storage_space: i32,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(has_many = "super::availability::Entity")]
    Availability,
    #[sea_orm(
        belongs_to = "super::company::Entity",
        from = "Column::Company",
        to = "super::company::Column::Id",
        on_update = "NoAction",
        on_delete = "NoAction"
    )]
    Company,
    #[sea_orm(has_many = "super::tour::Entity")]
    Tour,
}

impl Related<super::availability::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Availability.def()
    }
}

impl Related<super::company::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Company.def()
    }
}

impl Related<super::tour::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Tour.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
