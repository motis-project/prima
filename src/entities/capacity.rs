//! `SeaORM` Entity. Generated by sea-orm-codegen 0.12.15

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "capacity")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub id: i32,
    pub company: i32,
    pub start_time: DateTime,
    pub end_time: DateTime,
    pub amount: i32,
    pub vehicle_specifics: i32,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(
        belongs_to = "super::company::Entity",
        from = "Column::Company",
        to = "super::company::Column::Id",
        on_update = "NoAction",
        on_delete = "NoAction"
    )]
    Company,
    #[sea_orm(
        belongs_to = "super::vehicle_specifics::Entity",
        from = "Column::VehicleSpecifics",
        to = "super::vehicle_specifics::Column::Id",
        on_update = "NoAction",
        on_delete = "NoAction"
    )]
    VehicleSpecifics,
}

impl Related<super::company::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Company.def()
    }
}

impl Related<super::vehicle_specifics::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::VehicleSpecifics.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
